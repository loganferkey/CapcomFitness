@using CapcomFitness.ViewModels;
@model OverviewViewModel
@{
    string username = "@" + Model.Profile?.UserName;
}
<script>var imagePath = '@Url.Content("~/images/")';</script>

@if (Model == null || Model.Profile == null) {
    ViewData["Title"] = "Not Found";
    <div class="text-center mt-5">
        <div class="d-flex flex-column flex-lg-row align-items-center">
            <div class="mb-3" style="min-width: 50%;">
                <h5 class="display-5 text-muted fw-bold">We're Sorry!</h5>
                <p class="mx-auto" style="line-height: 1.5rem; width: 75%;">
                    It would appear we couldn't find the user you were looking for, go back to the home page <a asp-controller="Home" asp-action="Index" class="text-muted">here.</a>
                </p>
            </div>
            <div style="min-width: 50%; max-width: 85%;"><img class="img-fluid" src="~/images/notfound.png" /></div>
        </div>
    </div>
} else {
    ViewData["Title"] = @username;

    <div class="d-flex flex-row gap-3 bg-primary rounded-2 p-3 border-white border-bottom">
        <!--Temporary image background just to add feel to the page-->
        <img class="profile-image" src="@Model.Profile.ProfileImageUrl" style="width: 125px; height: 125px; border-radius: 100px;" />
        <div class="d-flex flex-column justify-content-center flex-fill">
            <h2 id="profile" data-profile-id="@Model.Profile.Id" class="mb-0 text-white">@Model.Profile.Nickname</h2>
            <small class="text-white opacity-75">@username</small>
            @if (Model.Profile.Location != null) 
            {
                <small class="text-white"><i class="fa-solid fa-location-dot text-white opacity-100"></i> <a class="mb-0 opacity-75 text-white text-decoration-none">@Model.Profile.Location</a></small>
            }
            @if (Model.Profile.Website != null)
            {
                <small class="text-white"><i class="fa-solid fa-link"></i> <a class="text-white opacity-75" href="">@Model.Profile.Website</a></small>
            }
            <small class="text-white"><i class="fa-solid fa-calendar-days"></i> <a class="mb-0 opacity-75 text-white text-decoration-none">Joined @Model.Profile.Joined?.ToString("yyyy MMMM")</a></small>
            <small class="mt-2 text-white opacity-75">@Model.Profile.Biography</small>
        </div>
    </div>
    <div class="d-flex flex-md-row flex-column gap-2 mt-2">
        <div id="routines" class="bg-primary flex-fill rounded-2 p-4 profile-width">
            <p class="fw-bold text-white mb-0 text-center">@Model.Profile.Nickname's Routines</p>
            <div class="d-flex flex-column gap-2">
                @if (Model.Routines != null && Model.Routines.Any())
                {
                    @foreach(Routines routine in Model.Routines)
                    {
                        <div class="row border-bottom border-white p-3">
                            <div class="col-3">
                                <a class="fw-bold text-white text-decoration-none" asp-controller="Routines" asp-action="UserRoutinesDetail" asp-route-id="@routine.Name"><p class="text-truncate mb-0">@routine.Name</p></a>
                            </div>
                            <div class="col-6">
                                <p class="text-white opacity-90 text-truncate mb-0">@routine.Description</p>
                            </div>
                            <div class="col-2 mx-auto">
                                <div class="text-center">
                                    <a href="#" class="text-white text-decoration-none"><i class="fa-regular fa-thumbs-up"></i> 0</a>
                                    <a href="#" class="text-white text-decoration-none"><i class="fa-regular fa-thumbs-down"></i> 0</a>
                                </div>
                            </div>
                        </div>

                    }
                }
                else
                {
                    <div class="d-flex justify-content-center align-items-center text-white">@username hasn't made any routines just yet.</div>
                }
            </div>
        </div>
        <div id="comments" class="bg-primary flex-fill d-flex flex-column gap-3 rounded-2 p-4 profile-width">
            <p class="fw-bold text-white text-center mb-0 pb-0">Comments</p>
            @if (Model.User != null)
            {
            <form>
                <textarea name="newComment" placeholder="Add a comment..." maxlength="256" class="form-control mb-1" style="min-height: 75px;"></textarea>
                <button data-UserId="@Model.Profile.Id" data-CommenterId="@Model.User.Id" type="button" id="postComment" hidden class="btn btn-primary shadow-lg border-white float-end">Post Comment</button>
            </form>
            }
            <div id="allComments" class="d-flex flex-column gap-4">
            @if (Model.Comments != null &&  Model.Comments.Any())
            {
                    @foreach (Comments comment in Model.Comments)
                    {
                        string profileImg = (comment.Commenter.ProfileImageUrl == "" || comment.Commenter.ProfileImageUrl == null) ? "/images/user.png" : comment.Commenter.ProfileImageUrl;
                            <div data-comment-id="@comment.Id" class="comment d-flex flex-column gap-2">
                                <div class="d-flex flex-row text-white align-items-center justify-content-between">
                                    <div class="d-flex flex-row gap-2 text-white align-items-center">
                                        <img src="@profileImg" width="26px" height="26px" style="border-radius: 9999px;" />
                                        <p class="p-0 m-0">@comment.Commenter!.Nickname</p>
                                    </div>
                                    <div class="d-flex flex-row gap-2">
                                        <p class="p-0 m-0 text-white-50">@comment.DateCreated</p>
                                        @if (comment.Commenter == Model.User)
                                        {
                                            <a data-comment-id="@comment.Id" class="DeleteComment" href="#comments"><i class="fa-solid fa-trash-can text-white"></i></a>
                                        }
                                    </div>
                                </div>
                                <p class="text-white p-0 m-0">@comment.Comment</p>
                            </div>
                    }
            }
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            $(document).ready(function() {
                function reloadComments() {
                    $.ajax({
                        url: '/Action/GetComments',
                        method: 'GET',
                        data: {
                            limit: 7,
                            profileId: $('#profile').data('profile-id')
                        },
                        success: function (response) {
                            $('#allComments').html(response.comments);
                            $('.DeleteComment').on('click', function() {
                                // Have to reattach delete function on all buttons with a delete icon
                                deleteComment($(this).data('comment-id'));
                            });
                        },
                        error: function (error) {
                            console.log('Error retrieving comments');
                        }
                    });
                }

                function deleteComment(commentId) {
                    $.ajax({
                        url: '/Action/RemoveComment',
                        method: 'POST',
                        data: { commentId: commentId },
                        success: function (response) {
                            console.log('comment deleted');
                            reloadComments();
                        },
                        error: function (xhr, status, error) {
                            console.log('Error removing comment');
                        }
                    });
                }

                function addComment() {
                    let formData = {
                        UserId: $("#postComment").data('userid'),
                        CommenterId: $("#postComment").data('commenterid'),
                        Comment: $('textarea[name=newComment]').val()
                    };
                    $.ajax({
                        type: 'POST',
                        url: '/Action/AddComment',
                        data: {
                            UserId: formData.UserId,
                            CommenterId: formData.CommenterId,
                            Comment: formData.Comment
                        },
                        success: function (response) {
                            reloadComments();
                            $('textarea[name=newComment]').val('');
                            $('#postComment').attr('hidden', true);
                        },
                        error: function (xhr, status, error) {
                            console.log('Error adding comment');
                        }
                    });
                }

                if ($("#postComment").length) {
                    // Makes the post comment button show when you enter in the comment box!
                    $("textarea").keyup(function () {
                        $("#postComment").removeAttr('hidden');
                    });
                    $("#postComment").on('click', function() {
                        addComment();
                    });
                }

                $(".DeleteComment").click(function() {
                    deleteComment($(this).data('comment-id'));
                });
                    
            });
        </script>
    }
}